@mixin transition($transition) {
	-moz-transition:    $transition;
	-o-transition:      $transition;
	-webkit-transition: $transition;
	transition:         $transition;
}
@mixin transition-property($property) {
	-moz-transition-property:    $property;
	-o-transition-property:      $property;
	-webkit-transition-property: $property;
	transition-property:         $property;
}
@mixin transition-duration($duration) {
	-moz-transition-property:    $duration;
	-o-transition-property:      $duration;
	-webkit-transition-property: $duration;
	transition-property:         $duration;
}
@mixin transition-timing-function($timing) {
	-moz-transition-timing-function:    $timing;
	-o-transition-timing-function:      $timing;
	-webkit-transition-timing-function: $timing;
	transition-timing-function:         $timing;
}
@mixin transition-delay($delay) {
	-moz-transition-delay:    $delay;
	-o-transition-delay:      $delay;
	-webkit-transition-delay: $delay;
	transition-delay:         $delay;
}

@mixin input-states ($color) {
  border-color: $color;
  color: $color;
  @include box-shadow(none);

  &:focus {
    @include box-shadow(none);
  }
}

@mixin placeholder-color ($color) {
  &:-moz-placeholder {
    color: $color;
  }
  &::-webkit-input-placeholder {
    color: $color;
  }
  &.placeholder {
    color: $color;
  }
}

@mixin swap-button-color($color, $hover, $active) {
 background-color: $color;

 &:hover,
 &:focus,
 .btn-group:focus &.dropdown-toggle {
   background-color: $hover;
 }
 &:active,
 .btn-group.open &.dropdown-toggle,
 &.active {
   background-color: $active;
 }
}

@mixin vertical-middle ($top:50%, $left:50%){
	position: absolute;
	left: $left;
	top: $top;
	transform: translate(-$left, -$top);
	-webkit-transform: translate(-$left, -$top);
	-moz-transform: translate(-$left, -$top);
	-ms-transform: translate(-$left, -$top);
}

@mixin valign {
	position: relative;
	top: 50%;
	-webkit-transform: translateY(-50%);
	-ms-transform: translateY(-50%);
	transform: translateY(-50%);
}

@mixin ellipsis ($width:false) {
	display: inline-block;
	text-overflow: ellipsis;
	white-space: nowrap;
	overflow: hidden;
	@if $width == true {
		width: 100%;
	}
}

@mixin textshadow ($string: 0 1px 3px rgba(0, 0, 0, 0.25)) {
	text-shadow: $string;
}

@mixin box-shadow ($string: 0 1px 3px rgba(0, 0, 0, 0.25)) {
	box-shadow: $string;
}


@mixin containers(){
	margin: 0 auto;
	width: $global-width;
}

@mixin clear ($after:false){
	@if $after == true {
		&:after {
			content: "";
			display: table;
			clear: both;
		}
	} @else {
		overflow: hidden
	}
}



// generic transform
@mixin transform($transforms) {
	-moz-transform: $transforms;
	-o-transform: $transforms;
	-ms-transform: $transforms;
	-webkit-transform: $transforms;
	transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
	@include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
	@include transform(scale($scale));
}
// translate
@mixin translate ($x, $y) {
	@include transform(translate($x, $y));
}
// skew
@mixin skew ($x, $y) {
	@include transform(skew(#{$x}deg, #{$y}deg));
}
//transform origin
@mixin transform-origin ($origin) {
	moz-transform-origin: $origin;
	-o-transform-origin: $origin;
	-ms-transform-origin: $origin;
	-webkit-transform-origin: $origin;
	transform-origin: $origin;
}


.test {
	@include skew(25,10);
	@include transform-origin(top left);
	position: absolute;
	top: 25%;
	bottom: 25%;
	left: 25%;
	right: 25%;
	background-color: rgba(20,20,20,.5);
}